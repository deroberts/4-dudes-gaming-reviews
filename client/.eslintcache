[{"C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\index.js":"1","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\App.js":"3","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\components\\GameCard.js":"4","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\utils\\Rawgapi.js":"5","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\components\\SearchGame.js":"6","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\components\\Navbar.js":"7","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\pages\\Auth.js":"8","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\actions\\posts.js":"9","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\components\\Form\\Form.js":"10","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\api\\index.js":"11","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\constants\\actionTypes.js":"12","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\components\\SignupForm.js":"13","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\utils\\mutations.js":"14","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\utils\\auth.js":"15"},{"size":517,"mtime":1677804830626,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1677804830628,"results":"18","hashOfConfig":"17"},{"size":2918,"mtime":1678389349681,"results":"19","hashOfConfig":"17"},{"size":1092,"mtime":1678155789016,"results":"20","hashOfConfig":"17"},{"size":828,"mtime":1678155789061,"results":"21","hashOfConfig":"17"},{"size":1136,"mtime":1678155789026,"results":"22","hashOfConfig":"17"},{"size":1733,"mtime":1678155789023,"results":"23","hashOfConfig":"17"},{"size":950,"mtime":1678155789044,"results":"24","hashOfConfig":"17"},{"size":1283,"mtime":1678155789009,"results":"25","hashOfConfig":"17"},{"size":2801,"mtime":1678155163742,"results":"26","hashOfConfig":"17"},{"size":418,"mtime":1678389090746,"results":"27","hashOfConfig":"17"},{"size":167,"mtime":1678155789033,"results":"28","hashOfConfig":"17"},{"size":3687,"mtime":1678388251681,"results":"29","hashOfConfig":"17"},{"size":541,"mtime":1678387526558,"results":"30","hashOfConfig":"17"},{"size":757,"mtime":1677804830629,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"iqtag0",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},"C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\index.js",[],["70","71"],"C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\App.js",["72","73","74","75"],"C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\components\\GameCard.js",["76","77","78"],"import { Card, CardBody, CardFooter, CardHeader, Image, Text } from \"grommet\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchPopularGames } from \"../utils/Rawgapi\";\r\n\r\nconst GameCard = ({ game }) => {\r\n  // state to store the fetched games\r\n  \r\n  \r\n  return (\r\n      \r\n      <div style={{display: 'flex', flexWrap: \"wrap\" }}>\r\n        <Card \r\n          key={game.id} \r\n          height=\"medium\"\r\n          width={{ max: \"small\" }}\r\n          margin=\"medium\"\r\n          >\r\n\r\n          <CardHeader pad=\"medium\">\r\n            <Text size=\"medium\" weight=\"bold\">\r\n              {game.name}\r\n            </Text>\r\n          </CardHeader>\r\n          <CardBody pad=\"medium\">\r\n            <Image fit=\"cover\" src={game.background_image} />\r\n          </CardBody>\r\n          <CardFooter pad={{ horizontal: \"medium\", vertical: \"small\" }}>\r\n            <Text size=\"small\">{game.released}</Text>\r\n            <Text size=\"small\" weight=\"bold\">\r\n              {game.rating}/5\r\n            </Text>\r\n          </CardFooter>\r\n        </Card>\r\n      </div>\r\n  );\r\n};\r\n\r\n\r\nexport default GameCard;\r\n","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\utils\\Rawgapi.js",["79"],"import React from 'react';\r\nimport 'isomorphic-fetch';\r\nconst RAWG_API_KEY = '3d841b012aa74a5b98dae1d014fff4bc';\r\n\r\n// Function to fetch popular games from RAWG API for the current year\r\nexport const fetchPopularGames = async () => {\r\n  const currentYear = new Date().getFullYear();\r\n  const url = `https://api.rawg.io/api/games?key=${RAWG_API_KEY}&dates=${currentYear}-01-01,${currentYear}-12-31&ordering=-rating&page_size=4`;\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  return data.results;\r\n};\r\n\r\n// Function to search games by name \r\nexport const searchGameByName = async (name) => {\r\n    const url = `https://api.rawg.io/api/games?key=${RAWG_API_KEY}&search=${name}`;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    return data.results;\r\n  }\r\n  \r\n\r\n","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\components\\SearchGame.js",[],"C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\pages\\Auth.js",["80"],"import React, { useState } from 'react';\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Call your authentication API or function here to sign up the user\r\n    // and handle any errors that may occur\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <label htmlFor=\"password\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Sign up</button>\r\n      {error && <p>{error}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\actions\\posts.js",["81"],"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\n// export const likePost = (id) => async (dispatch) => {\r\n//   try {\r\n//     const { data } = await api.likePost(id);\r\n\r\n//     dispatch({ type: LIKE, payload: data });\r\n//   } catch (error) {\r\n//     console.log(error.message);\r\n//   }\r\n// };\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\components\\Form\\Form.js",["82"],"import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, Form, FormField, Heading, TextArea, TextInput, Text } from 'grommet';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nconst PostForm = ({ currentId, setCurrentId }) => {\r\n  const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId === 0) {\r\n      dispatch(createPost(postData));\r\n      clear();\r\n    } else {\r\n      dispatch(updatePost(currentId, postData));\r\n      clear();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box align=\"center\" pad=\"medium\">\r\n      <Heading level={2}>{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Heading>\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormField name=\"creator\" htmlFor=\"creator-input\" label=\"Creator\">\r\n          <TextInput id=\"creator-input\" name=\"creator\" value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n        </FormField>\r\n        <FormField name=\"title\" htmlFor=\"title-input\" label=\"Title\">\r\n          <TextInput id=\"title-input\" name=\"title\" value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        </FormField>\r\n        <FormField name=\"message\" htmlFor=\"message-input\" label=\"Message\">\r\n          <TextArea id=\"message-input\" name=\"message\" value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n        </FormField>\r\n        <FormField name=\"tags\" htmlFor=\"tags-input\" label=\"Tags (coma separated)\">\r\n          <TextInput id=\"tags-input\" name=\"tags\" value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n        </FormField>\r\n        <FormField name=\"selectedFile\" htmlFor=\"file-input\" label=\"Image\">\r\n          <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\r\n        </FormField>\r\n        <Box direction=\"row\" justify=\"between\" align=\"center\" pad={{ vertical: 'medium' }}>\r\n          <Button primary label=\"Submit\" type=\"submit\" />\r\n          <Button label=\"Clear\" onClick={clear} />\r\n        </Box>\r\n      </Form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\api\\index.js",[],"C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\components\\SignupForm.js",["83","84"],"import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\n\r\n// import { createUser } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\n\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [addUser, { error, data }] = useMutation(ADD_USER);\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    console.log(name)\r\n\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...userFormData },\r\n      });\r\n\r\n      Auth.login(data.addUser.token);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert\r\n          dismissible\r\n          onClose={() => setShowAlert(false)}\r\n          show={showAlert}\r\n          variant=\"danger\"\r\n        >\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your username\"\r\n            name=\"username\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Username is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Your email address\"\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Email is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Your password\"\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Password is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={\r\n            !(\r\n              userFormData.username &&\r\n              userFormData.email &&\r\n              userFormData.password\r\n            )\r\n          }\r\n          type=\"submit\"\r\n          variant=\"success\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;","C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Hunte\\4-dudes-gaming-reviews\\client\\src\\utils\\auth.js",["85"],"import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    const decoded = decode(token);\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":19,"nodeType":"92","messageId":"93","endLine":3,"endColumn":26},{"ruleId":"90","severity":1,"message":"94","line":3,"column":35,"nodeType":"92","messageId":"93","endLine":3,"endColumn":41},{"ruleId":"90","severity":1,"message":"95","line":3,"column":43,"nodeType":"92","messageId":"93","endLine":3,"endColumn":46},{"ruleId":"90","severity":1,"message":"96","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":12},{"ruleId":"90","severity":1,"message":"97","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":19},{"ruleId":"90","severity":1,"message":"98","line":2,"column":21,"nodeType":"92","messageId":"93","endLine":2,"endColumn":29},{"ruleId":"90","severity":1,"message":"99","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":27},{"ruleId":"90","severity":1,"message":"100","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"101","line":6,"column":17,"nodeType":"92","messageId":"93","endLine":6,"endColumn":25},{"ruleId":"90","severity":1,"message":"102","line":1,"column":45,"nodeType":"92","messageId":"93","endLine":1,"endColumn":49},{"ruleId":"90","severity":1,"message":"103","line":2,"column":70,"nodeType":"92","messageId":"93","endLine":2,"endColumn":74},{"ruleId":"90","severity":1,"message":"104","line":17,"column":21,"nodeType":"92","messageId":"93","endLine":17,"endColumn":26},{"ruleId":"90","severity":1,"message":"105","line":17,"column":28,"nodeType":"92","messageId":"93","endLine":17,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":37,"column":1,"nodeType":"108","endLine":37,"endColumn":34},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Heading' is defined but never used.","Identifier","unusedVar","'Anchor' is defined but never used.","'Nav' is defined but never used.","'Auth' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'fetchPopularGames' is defined but never used.","'React' is defined but never used.","'setError' is assigned a value but never used.","'LIKE' is defined but never used.","'Text' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]