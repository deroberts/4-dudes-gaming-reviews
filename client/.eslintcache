[{"/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/index.js":"1","/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/reportWebVitals.js":"2","/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/App.js":"3","/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/utils/Rawgapi.js":"4","/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/pages/Auth.js":"5","/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/components/GameCard.js":"6","/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/components/SearchGame.js":"7","/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/components/Navbar.js":"8"},{"size":500,"mtime":1677627899931,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1677627899932,"results":"11","hashOfConfig":"10"},{"size":2643,"mtime":1678150119309,"results":"12","hashOfConfig":"10"},{"size":806,"mtime":1678150119317,"results":"13","hashOfConfig":"10"},{"size":914,"mtime":1678150119316,"results":"14","hashOfConfig":"10"},{"size":1053,"mtime":1678150119309,"results":"15","hashOfConfig":"10"},{"size":1098,"mtime":1678150119315,"results":"16","hashOfConfig":"10"},{"size":1682,"mtime":1678150119314,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r6t8z1",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/index.js",[],"/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/reportWebVitals.js",[],"/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/App.js",["38","39","40"],"import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Grommet, Heading, Image, Anchor, Nav, Box } from \"grommet\";\nimport { fetchPopularGames } from \"./utils/Rawgapi\";\nimport GameCard from \"./components/GameCard\";\nimport SearchGame from \"./components/SearchGame\";\nimport cover from \"./images/cover.png\";\nimport Auth from \"./pages/Auth\";\nimport Navbar from \"./components/Navbar\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { Sun, Moon } from \"grommet-icons\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [popularGames, setPopularGames] = React.useState([]);\n  const [darkMode, setDarkMode] = React.useState(false);\n\n  useEffect(() => {\n    fetchPopularGames()\n      .then((data) => setPopularGames(data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  // adding dark mode toggle\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  const theme = {\n    global: {\n      font: {\n        family: \"Roboto\",\n      },\n      colors: {\n        brand: \"#00739D\",\n        background: {\n          light: \"#FFFFFF\",\n          dark: \"#1A1A1A\",\n        },\n        text: {\n          light: \"#333333\",\n          dark: \"#FFFFFF\",\n        },\n      },\n    },\n  };\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Grommet\n          theme={theme}\n          className=\"App\"\n          themeMode={darkMode ? \"dark\" : \"light\"}\n        >\n          {/* <Heading size=\"large\" color=\"brand\">\n            4-dudes-gaming-reviews\n          </Heading> */}\n          <Navbar />\n          <Box direction=\"row\" wrap justify=\"center\">\n            {popularGames.map((game) => (\n              <Box key={game.id} margin=\"small\">\n                <GameCard game={game} />\n              </Box>\n            ))}\n          </Box>\n          <SearchGame />\n          <Routes>\n            <Route exact path=\"/Auth\" element={<Auth />} />\n          </Routes>\n          <Image fit=\"cover\" src={cover} />\n          <button onClick={toggleDarkMode}>\n            {darkMode ? <Sun /> : <Moon />}\n          </button>\n        </Grommet>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/utils/Rawgapi.js",["41"],"import React from 'react';\nimport 'isomorphic-fetch';\nconst RAWG_API_KEY = '3d841b012aa74a5b98dae1d014fff4bc';\n\n// Function to fetch popular games from RAWG API for the current year\nexport const fetchPopularGames = async () => {\n  const currentYear = new Date().getFullYear();\n  const url = `https://api.rawg.io/api/games?key=${RAWG_API_KEY}&dates=${currentYear}-01-01,${currentYear}-12-31&ordering=-rating&page_size=4`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.results;\n};\n\n// Function to search games by name \nexport const searchGameByName = async (name) => {\n    const url = `https://api.rawg.io/api/games?key=${RAWG_API_KEY}&search=${name}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  }\n  \n\n","/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/pages/Auth.js",["42"],"import React, { useState } from 'react';\n\nconst Auth = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Call your authentication API or function here to sign up the user\n    // and handle any errors that may occur\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"email\">Email</label>\n      <input\n        type=\"email\"\n        id=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <label htmlFor=\"password\">Password</label>\n      <input\n        type=\"password\"\n        id=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button type=\"submit\">Sign up</button>\n      {error && <p>{error}</p>}\n    </form>\n  );\n};\n\nexport default Auth;\n","/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/components/GameCard.js",["43","44","45"],"import { Card, CardBody, CardFooter, CardHeader, Image, Text } from \"grommet\";\nimport { useEffect, useState } from \"react\";\nimport { fetchPopularGames } from \"../utils/Rawgapi\";\n\nconst GameCard = ({ game }) => {\n  // state to store the fetched games\n  \n  \n  return (\n      \n      <div style={{display: 'flex', flexWrap: \"wrap\" }}>\n        <Card \n          key={game.id} \n          height=\"medium\"\n          width={{ max: \"small\" }}\n          margin=\"medium\"\n          >\n\n          <CardHeader pad=\"medium\">\n            <Text size=\"medium\" weight=\"bold\">\n              {game.name}\n            </Text>\n          </CardHeader>\n          <CardBody pad=\"medium\">\n            <Image fit=\"cover\" src={game.background_image} />\n          </CardBody>\n          <CardFooter pad={{ horizontal: \"medium\", vertical: \"small\" }}>\n            <Text size=\"small\">{game.released}</Text>\n            <Text size=\"small\" weight=\"bold\">\n              {game.rating}/5\n            </Text>\n          </CardFooter>\n        </Card>\n      </div>\n  );\n};\n\n\nexport default GameCard;\n","/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/components/SearchGame.js",[],"/Users/zhongchengzhao/bootcamp/Group Project 03/client/src/components/Navbar.js",[],{"ruleId":"46","severity":1,"message":"47","line":3,"column":19,"nodeType":"48","messageId":"49","endLine":3,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":3,"column":35,"nodeType":"48","messageId":"49","endLine":3,"endColumn":41},{"ruleId":"46","severity":1,"message":"51","line":3,"column":43,"nodeType":"48","messageId":"49","endLine":3,"endColumn":46},{"ruleId":"46","severity":1,"message":"52","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":13},{"ruleId":"46","severity":1,"message":"53","line":6,"column":17,"nodeType":"48","messageId":"49","endLine":6,"endColumn":25},{"ruleId":"46","severity":1,"message":"54","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":19},{"ruleId":"46","severity":1,"message":"55","line":2,"column":21,"nodeType":"48","messageId":"49","endLine":2,"endColumn":29},{"ruleId":"46","severity":1,"message":"56","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":27},"no-unused-vars","'Heading' is defined but never used.","Identifier","unusedVar","'Anchor' is defined but never used.","'Nav' is defined but never used.","'React' is defined but never used.","'setError' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'fetchPopularGames' is defined but never used."]